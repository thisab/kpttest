apiVersion: apps/v1
kind: Deployment
metadata:
  name: aether-roc-gui-v2-1
  namespace: default
  labels:
    helm.sh/chart: aether-roc-gui-v2-1-2.1.15
    app.kubernetes.io/name: aether-roc-gui-v2-1
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: aether-roc-gui-v2-1
      app: aether
      type: arg
      resource: aether-roc-gui-v2-1
      app.kubernetes.io/name: aether-roc-gui-v2-1
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: aether-roc-gui-v2-1
        app: aether
        type: arg
        resource: aether-roc-gui-v2-1
        app.kubernetes.io/name: aether-roc-gui-v2-1
        app.kubernetes.io/instance: aether-roc-umbrella
    spec:
      securityContext: null
      containers:
      - name: aether-roc-gui-v2-1
        securityContext: null
        image: "onosproject/aether-roc-gui:v0.9.24"
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENIDCISSUER
          value:
        - name: FEATUREAETHER
          value: "true"
        - name: FEATURESDNFABRIC
          value: "false"
        stdin: true
        resources: {}
        ports:
        - name: web
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: 30
        readinessProbe:
          tcpSocket:
            port: web
          initialDelaySeconds: 30
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: secret
          mountPath: /usr/share/certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: aether-roc-gui-v2-1
      - name: secret
        secret:
          secretName: aether-roc-gui-v2-1-secret
