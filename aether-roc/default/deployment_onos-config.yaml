apiVersion: apps/v1
kind: Deployment
metadata:
  name: onos-config
  namespace: default
  labels:
    helm.sh/chart: onos-config-1.7.8
    app.kubernetes.io/name: onos-config
    app.kubernetes.io/instance: aether-roc-umbrella
    app.kubernetes.io/version: "v0.10.36"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: onos-config
      app: onos
      type: config
      resource: onos-config
      app.kubernetes.io/name: onos-config
      app.kubernetes.io/instance: aether-roc-umbrella
  template:
    metadata:
      labels:
        name: onos-config
        app: onos
        type: config
        resource: onos-config
        app.kubernetes.io/name: onos-config
        app.kubernetes.io/instance: aether-roc-umbrella
      annotations:
        broker.atomix.io/inject: "true"
        raft.storage.atomix.io/inject: "true"
    spec:
      serviceAccountName: onos-config
      securityContext: null
      containers:
      - name: onos-config
        image: "onosproject/onos-config:v0.10.36"
        imagePullPolicy: IfNotPresent
        env:
        # *_NAMESPACE and *_NAME environment variables are recognized by onos-lib-go utilities.
        # These variables should always be defined.
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OIDC_SERVER_URL
          value:
        - name: ADMINGROUPS
          value: AetherROCAdmin,EnterpriseAdmin
        - name: SERVICE_NAME
          value: onos-config
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        args:
        - "--caPath=/etc/onos/certs/tls.cacrt"
        - "--keyPath=/etc/onos/certs/tls.key"
        - "--certPath=/etc/onos/certs/tls.crt"
        - "--plugin=localhost:5152"
        - "--plugin=localhost:5153"
        ports:
        - name: grpc
          containerPort: 5150
          # Expose the debug port for debugging
        startupProbe:
          tcpSocket:
            port: 5150
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          tcpSocket:
            port: 5150
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 5150
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/onos/config
          readOnly: true
        - name: secret
          mountPath: /etc/onos/certs
          readOnly: true
        # Enable ptrace for debugging
        securityContext:
      - name: openpolicyagent
        image: "openpolicyagent/opa:0.40.0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8181
        args:
        - "run"
        - "--server"
        - "/etc/onos/rego"
        - "--log-level"
        - info
        livenessProbe:
          httpGet:
            scheme: HTTP # assumes OPA listens on localhost:8181
            port: 8181
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health?bundle=true # Include bundle activation in readiness
            scheme: HTTP
            port: 8181
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: openpolicyagent
          mountPath: /etc/onos/rego
          readOnly: true
      - name: aether-2
        image: "onosproject/aether-2.0.x:2.0.12-aether-2.0.x"
        # image: onosproject/aether-2.0.x:2.0.12-aether-2.0.x
        imagePullPolicy: IfNotPresent
        args:
        - "5152"
        ports:
        - name: grpc
          containerPort: 5152
      - name: aether-2-1
        image: "onosproject/aether-2.1.x:2.1.11-aether-2.1.x"
        # image: onosproject/aether-2.1.x:2.1.11-aether-2.1.x
        imagePullPolicy: IfNotPresent
        args:
        - "5153"
        ports:
        - name: grpc
          containerPort: 5153
      # Mount volumes
      volumes:
      - name: config
        configMap:
          name: onos-config-config
      - name: secret
        secret:
          secretName: onos-config-secret
      - name: openpolicyagent
        configMap:
          name: aether-roc-umbrella-opa-rbac
