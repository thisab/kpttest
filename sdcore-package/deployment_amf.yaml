# Source: sd-core/charts/5g-control-plane/templates/deployment-amf.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: amf
  labels:
    release: sd-core
    app: amf
  namespace: omec
spec:
  replicas: 1
  #serviceName: amf-headless
  selector:
    matchLabels:
      release: sd-core
      app: amf
  template:
    metadata:
      labels:
        release: sd-core
        app: amf
      annotations:
        field.cattle.io/workloadMetrics: '[{"path":"/metrics","port":9089,"schema":"HTTP"}]'
    spec:
      serviceAccountName: amf
      containers:
      - name: amf
        image: registry.opennetworking.org/docker.io/omecproject/5gc-amf:master-5a47e34
        imagePullPolicy: IfNotPresent
        stdin: true
        tty: true
        #        command: [/free5gc/script/amf-run.sh]
        command: ["/bin/bash", "-c"]
        args:
        - "cat /free5gc/config/amfcfg.conf && GOTRACEBACK=crash /free5gc/amf/amf -amfcfg /free5gc/config/amfcfg.conf"
        env:
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "99"
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: "info"
        - name: GRPC_TRACE
          value: "all"
        - name: GRPC_VERBOSITY
          value: "debug"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MANAGED_BY_CONFIG_POD
          value: "true"
        volumeMounts:
        - name: run-script
          mountPath: /free5gc/script/amf-run.sh
          subPath: amf-run.sh
        - name: amf-config
          mountPath: /free5gc/config
      volumes:
      - name: run-script
        configMap:
          name: amf
          defaultMode: 493
      - name: amf-config
        configMap:
          name: amf
          defaultMode: 493
